Ітерабельні об'єкти
- Контейнер - це тип даних, який інкапсулює в собі значення інших типів.
- Ітерабельний об'єкт (в оригінальній термінології - іменник "iterable") -
це об'єкт, який може повертати значення по одному за раз.
Приклади: усі контейнери і послідовності (списки, рядки тощо), файли, а також
екземпляри будь-яких класів, у яких визначено метод __iter__() або
__getitem__().
- Метод __iter__() повертає об'єкт-ітератор.
- Метод __getitem__() повертає елемент контейнера за ключем або індексом.
- Ітерабельні об'єкти можуть бути використані всередині циклу for, а також у
багатьох інших випадках, коли очікується послідовність (функції sum(), zip(),
map() тощо).
- Коли ітерабельний об'єкт передається у вбудовану функцію iter(), вона
повертає ітератор для цього об'єкта, який дає змогу один раз пройти по
значеннях ітерабельного об'єкта.

Ітератори
- Ітератор(iterator) - це об'єкт, який представляє потік даних. Повторювані
виклики методу __next__() (next() у Python 2) ітератора або передача його
вбудованій функції next() повертає наступні елементи потоку.
- Якщо більше не залишилося даних, викидається виняток StopIteration. Після
цього ітератор вичерпано і будь-які наступні виклики його методу __next__()
знову генерують виняток StopIteration.
- Ітератори зобов'язані мати метод __iter__, який повертає сам об'єкт
ітератора, тож будь-який ітератор також є ітерабельним об'єктом і може бути
використаний майже скрізь, де приймаються ітерабельні об'єкти.