Поняття механізму винятків
Обробка виняткових ситуацій або обробка винятків (англ. exception handling) -
механізм мов програмування, призначений для опису реакції програми на помилки
часу виконання та інші можливі проблеми (винятки), що можуть виникнути при
виконанні програми та призводять до неможливості (безглуздості) подальшого
відпрацювання програмою її базового алгоритму.

Деякі класичні приклади виняткових ситуацій:
- ділення на нуль;
- помилка під час спроби зчитати зовнішні дані;
- вичерпання доступної пам'яті.

Усі стандартні класи винятків у Python є класами нового типу і успадковуються
від Exception або безпосередньо від BaseException. Усі користувацькі винятки
мають бути спадкоємцями Exception.

Обробка виняткових ситуацій у Python
try:
    # область дії обробника
except Exception1:
    # обробник винятку Exception1
except Exception2:
    # обробник винятку Exception2
except:
    # стандартний обробник винятків
else:
    # код, який виконується, якщо жодне виключення не виникло
finally:
    # код, який виконується в будь-якому випадку

- try
Блок try задає область дії обробника винятків. Якщо при виконанні операторів у
даному блоці було викинуто виняток, їхнє виконання переривається і керування
переходить до одного з обробників. Якщо не виникло жодного винятку, блоки
except пропускаються.

- except
Блоки except обробляються згори донизу і керування передається не більше, ніж
одному обробнику. Тому за необхідності по-різному обробляти винятки, які
перебувають в ієрархії успадкування, спочатку потрібно вказувати обробники менш
загальних винятків, а потім - більш загальних. Також саме тому стандартний блок
except може бути тільки останнім.

- else
Необов'язковий блок. Оператори всередині нього виконуються, якщо жодне
виключення не виникло. Призначений для того, щоб відокремити код, який може
викликати виняток, який має бути опрацьований у даному блоці try/except,
від коду, що може викликати виняток того самого класу, який має бути
перехоплений на рівні вище, та звести до мінімуму кількість операторів у блоці
try.

- finally
Оператори всередині блоку finally виконуються незалежно від того, чи виникло
якесь виключення. Призначений для виконання так званих cleanup actions, тобто
дій з очищення: закриття файлів, видалення тимчасових об'єктів тощо. Якщо
виняток не було перехоплено жодним із блоків except, то воно заново викидається
інтерпретатором після виконання дій у блоці finally. Блок finally виконується
перед виходом з оператора try/except завжди, навіть якщо одна з його гілок
містить оператор return (коли оператор try/except розташований усередині
функції), break або continue (коли оператор try/except розташований усередині
циклу) або виникло інше необроблене виключення під час опрацювання цього
виключення.

Для того, щоб в обробнику винятку виконати певні дії, а потім передати виняток
далі, на один рівень обробників вище (тобто, викинути те ж саме виняток ще
раз), використовується ключове слово raise без параметрів.
try:
    do_some_actions()           # дії, які можуть викликати виняток
except Exception as exception:  # обробник винятку
    handle_exception(exception) # певні дії з даним винятком
    raise                       # згенерувати той самий виняток ще раз

Базові стандартні класи винятків:
- BaseException
Базовий клас для всіх винятків.
- Exception
Базовий клас для всіх стандартних винятків, які не вказують на обов'язкове
завершення програми, і всіх користувацьких винятків.
- ArithmeticError
Базовий клас для всіх винятків, пов'язаних з арифметичними операціями.
- BufferError
Базовий клас для винятків, пов'язаних з операціями над буфером.
- LookupError
Базовий клас для винятків, пов'язаних із невірним ключем або індексом колекції.
- StandardError (Python 2)
Базовий клас для всіх вбудованих винятків, крім StopIteration, GeneratorExit,
KeyboardInterrupt і SystemExit.
- EnvironmentError (Python 2)
Базовий клас для винятків, пов'язаних із помилками, які відбуваються поза
інтерпретатором Python.

- Синтаксичні помилки
Помилка синтаксису виникає, коли синтаксичний аналізатор Python стикається з
ділянкою коду, що не відповідає специфікації мови і не може бути
інтерпретованою.

Попередження
- Попередження зазвичай виводяться на екран у ситуаціях, коли не гарантується
помилкова поведінка і програма, як правило, може продовжувати роботу, проте
користувача слід повідомити про що-небудь.
- Базовим класом для попереджень є Warning, який успадковується від Exception.
- Базовим класом-спадкоємцем Warning для користувацьких попереджень є
UserWarning.