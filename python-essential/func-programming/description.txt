Функціональне програмування - розділ дискретної математики й парадигма
програмування, в якій процес обчислення трактується як обчислення значень
функцій у математичному розумінні останніх (на відміну від функцій як
підпрограм у процедурному програмуванні).
Функціональне програмування передбачає обходитися обчисленням результатів
функцій від вихідних даних і результатів інших функцій, і не передбачає явного
зберігання стану програми. Відповідно, не передбачає воно і змінюваність цього
стану (на відміну від імперативного, де однією з базових концепцій є змінна, що
зберігає своє значення і дає змогу змінювати його в міру виконання алгоритму).

Характерні риси функціонального програмування
- Розв'язання задачі записується як сукупність незалежних від зовнішнього стану
функцій
- Функції як об'єкти першого класу
- Імутабельність (незмінність) даних
- Використання функцій вищого порядку
- Каррування та часткове застосування функцій

Функція як об'єкт першого класу
Об'єкт називають "об'єктом першого класу", якщо він:
- може бути збережений у змінній або структурах даних;
- може бути переданий у функцію як аргумент;
- може бути повернутий із функції як результат;
- може бути створений під час виконання програми;
- внутрішньо самоідентифікований (незалежний від іменування).
Термін "об'єкт" використовується тут у загальному сенсі, і не обмежується
об'єктами мови програмування.
У Python, як і у функціональних мовах, функції є об'єктами першого класу.

Замикання
- Замикання (англ. closure) у програмуванні - функція, у якій є посилання на
змінні, оголошені поза тілом цієї функції в навколишньому коді, які не є її
параметрами.
- У разі замикання посилання на змінні зовнішньої функції дійсні всередині
вкладеної функції доти, доки працює вкладена функція, навіть якщо зовнішня
функція закінчила роботу, і змінні вийшли з області видимості.
- Замикання пов'язує код функції з її лексичним оточенням (місцем, у якому вона
визначена в коді). Лексичні змінні замикання відрізняються від глобальних
змінних тим, що вони не займають глобальний простір імен. Від змінних в
об'єктах вони відрізняються тим, що прив'язані до функцій, а не об'єктів.
- У Python будь-які функції (зокрема й лямбда-вирази), оголошені всередині
інших функцій, є повноцінними замиканнями.

Функція вищого порядку - функція, що приймає як аргументи інші функції або
повертає іншу функцію як результат. Основна ідея полягає в тому, що функції
мають той самий статус, що й інші об'єкти даних.

Каррування або карринг (англ. currying) - перетворення функції від багатьох
аргументів на функцію, що бере свої аргументи по одному. Це перетворення було
запроваджено М.Шейнфінкелем і Г.Фреге й отримало свою назву на честь Х.Каррі.