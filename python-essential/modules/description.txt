- Модуль - функціонально закінчений фрагмент програми, оформлений у вигляді
окремого файлу з вихідним кодом або іменованої безперервної її частини.
Модулі дають змогу розбивати складні завдання на більш дрібні відповідно до
принципу модульності. Зазвичай проектуються таким чином, щоб надавати
програмістам зручну для багаторазового використання функціональність(інтерфейс)
у вигляді набору функцій, класів, констант.
- Файл, який містить вихідний код мовою Python, є модулем.
- Модулі можуть об'єднуватися в пакети і, далі, в бібліотеки.
- Зручність використання модульної архітектури полягає в можливості оновлення
(заміни) модуля, без необхідності зміни решти системи.

- Модульне програмування - це організація програми як сукупності невеликих не-
залежних блоків, званих модулями, структура і поведінка яких підпорядковуються
певним правилам. Використання модульного програмування дає змогу спростити
тестування програми та виявлення помилок. Апаратно-залежні підзадачі можуть
бути суворо відокремлені від інших підзадач, що покращує мобільність
створюваних програм.

- Імпортування модуля:
import module_name
import module_name as new_name

- Імпортування імен з модуля:
from module import name
from module import name1, name2
from module import *
from module import name as new_name
from module import name1 as new_name1, name2 as new_name2

- Імпортування всіх імен (from module import *) зручне в інтерактивній сесії
інтерпретатора, але небажане в коді. Якщо замість списку імен вказати символ *,
то імпортуються всі імена, окрім тих, які починаються з символу підкреслення.

- Пакети
- Модулі можуть об'єднуватися в пакети. Пакети слугують як простори імен для
модулів і спосіб їх структурування.
- Будь-який пакет є модулем, але не кожен модуль є пакетом.
- Як правило, модулі представляються у вигляді файлів, а пакети - каталогів у
файловій системі (але не завжди).
- Для того, щоб каталог був пакетом, у ньому має бути файл __init__.py.
Він автоматично виконується під час імпортування відповідного модуля і може
містити певні дії для ініціалізації або бути порожнім.

- Імпорт з package
import package.module
import package.subpackage.module
from package import module
from package import item
from package.subpackage import module, item
from module import *

- Для того, щоб можна було імпортувати всі імена пакета *, пакет має описувати
список __all__, який містить імена підпакетів і модулів.

- Відносне імпортування
Крім абсолютних, існують також відносні імпорти: крапка вказує на поточний
пакет, дві крапки - на батьківський. Ці ж символи можуть бути використані
одразу перед ім'ям пакета або модуля і впливати на те, де інтерпретатор буде
його шукати.
from . import name
from ... import name
from .package import name
from ..package import name