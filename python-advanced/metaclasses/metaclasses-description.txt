Метакласи в мові Python потрібні для створення класів. Можна провести аналогію з об'єктами та класами,
де клас відповідає за створення об'єкта, тобто набору атрибутів та методів. А метаклас відповідає за
створення класів, їхнього набору атрибутів та методів.

Навіщо потрібні метакласи?
- створення класів.
- контроль поведінки класів.
– Не всі мови їх підтримують.
- Найчастіше вони нам не потрібні.

У Python є функція type, яка повертає тип об'єкту, переданого як параметр. Однак ця функція призначена ще
й до створення класів. Вона приймає на вхід три параметри:
- Назва класу.
- Кортеж з батьківських класів, від яких необхідно успадковувати новий клас.
- Набір атрибутів та методів для нового класу.
а повертає з урахуванням переданих параметрів новий створений клас.

Функція type
- Перевірка типу
- створення нового класу

Створення метакласів відрізняється у 2 та 3 версіях Python. У другій версії, як визначення, який метаклас
відповідає за створення класу, можна було вказати метаклас у полі __metaclass__, а в 3 версії Python необхідно
передавати параметр metaclass зі значенням метакласу після перерахування батьківських класів, наприклад:
class C(A, B, metaclass=MyMeta).