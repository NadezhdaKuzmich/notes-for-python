Багато звичайних завдань, які ми вирішуємо кожен день, використовуючи будь-яку мову програмування,
можуть бути вирішені з використанням асинхронного підходу. Де за перемикання управління між виконанням
завдань може відповідати сама програма, а не процесор. Завдяки механізму співпрограм ми можемо створювати
такі програми, які самі повідомлятимуть про те, що можна переключитися до іншого завдання, а не блокувати
на якийсь час усі обчислення.

Для запуску таких програм існує спеціальний пул завдань, куди можна складати співпрограми, і вони будуть
послідовно перемикатися між собою. Такий пул завдань називається циклом подій (Event Loop). Співпрограми
призначені для запуску в циклі подій.

Починаючи з версії 3.5, до Python додали нові ключові слова async/await, які повністю замінюють yield from.
Однак для сумісності був доданий декоратор asyncio.coroutine, який можна використовувати якраз для підтримки
yield from.

Основні поняття
- Перемикання контексту.
- Програмне перемикання.
- Цикл подій.
- Відмінність асинхронності від багатопоточності.

Асинхронність у Python
- Корутини/співпрограми.
- Ключові слова async/await.
- Цикл подій.
- yield / yield from.

Модулі та бібліотеки Python
- asyncio, aiohttp.
- gevent.
- Tornado.
- Twisted.