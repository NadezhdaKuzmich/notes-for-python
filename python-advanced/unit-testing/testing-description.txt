Модульне тестування необхідне для перевірки роботи модулів нашого проекту, що є або розробляються.
Замість ручного тестування, коли ми вручну запускаємо функції або методи класів в інтерпретаторі Python,
нам необхідно написати програмний код, який тестуватиме наші модулі. Модуль - будь-яка програмна одиниця,
будь то функції, клас або розроблена API.

Кожен написаний тест необхідно підтримувати в актуальному стані, тобто за будь-якої зміни кодової бази
необхідно запускати наявні тести та перевіряти їхню працездатність. У випадку, якщо якісь тести виконалися
з помилками, необхідно перевірити коректність логіки і скоригувати або тести, або самі модулі, що тестуються -
це залежить від того, де саме виявиться помилка.

Найчастіше виникає потреба створювати заглушки, тобто опускати виконання будь-яких частин модуля. Наприклад,
при тестуванні реєстрації користувача необхідно вимкнути можливість надсилання пошти, тобто зробити заглушку
для цієї функції та не навантажувати сервіс відправкою пошти під час тестування. Або як інший приклад -
відправка смс. Для цих завдань використовують механізм mock.

Існує техніка TDD, яка розшифровується як “test driven development” - Розробка через тестування. Дана техніка
слідує наступним принципам: спочатку розробляється тест для покриття бажаної зміни коду або нового функціоналу,
а потім слідує правка наявного коду модуля, приводячи його до необхідного результату. Після чого з використанням
тестів проводиться рефакторинг і доопрацювання блоку, що тестується.

Наприклад фреймворк Django має спеціальні класи, для розробки модульних тестів. Однак, необхідно розуміти, що всі
ці класи засновані на використанні можливостей стандартного модуля unittest. Таким чином, ці класи просто розширюють
можливості unittest.TestCase класу, додаючи допоміжні засоби для роботи з Django.

Також існує ряд бібліотек, які дозволяють спростити написання тестів та аналіз результатів модульного тестування.
Прикладом такої бібліотеки є pytest. Сама бібліотека позиціонується як бібліотека для TDD (Розробка через тестування)
і може використовуватися для створення тестів для того ж фреймворку Django.

Модульне тестування у Python
- Стандартний модуль unittest
- Пакет pytest
- Тестування в Django
- Заглушки